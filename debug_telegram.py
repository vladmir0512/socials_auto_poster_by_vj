#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å Telegram API
"""

import os
import requests
from dotenv import load_dotenv

def check_bot_info(token):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
    
    try:
        url = f"https://api.telegram.org/bot{token}/getMe"
        response = requests.get(url)
        
        if response.status_code == 200:
            bot_info = response.json()
            if bot_info["ok"]:
                bot = bot_info["result"]
                print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{bot['username']}")
                print(f"   ID: {bot['id']}")
                print(f"   –ò–º—è: {bot['first_name']}")
                if bot.get('can_join_groups'):
                    print("   ‚úÖ –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º")
                else:
                    print("   ‚ùå –ù–ï –º–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {bot_info}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_chat_info(token, chat_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ/–∫–∞–Ω–∞–ª–µ"""
    print(f"\nüí¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat_id}...")
    
    try:
        url = f"https://api.telegram.org/bot{token}/getChat"
        data = {"chat_id": chat_id}
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            chat_info = response.json()
            if chat_info["ok"]:
                chat = chat_info["result"]
                print(f"‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω: {chat.get('title', chat.get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'))}")
                print(f"   –¢–∏–ø: {chat['type']}")
                print(f"   ID: {chat['id']}")
                
                if chat['type'] == 'channel':
                    print("   üì¢ –≠—Ç–æ –∫–∞–Ω–∞–ª")
                elif chat['type'] == 'group':
                    print("   üë• –≠—Ç–æ –≥—Ä—É–ø–ø–∞")
                elif chat['type'] == 'supergroup':
                    print("   üë• –≠—Ç–æ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞")
                elif chat['type'] == 'private':
                    print("   üí¨ –≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {chat_info}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            try:
                error_details = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_details}")
            except:
                pass
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_bot_permissions(token, chat_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ"""
    print(f"\nüîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ...")
    
    try:
        url = f"https://api.telegram.org/bot{token}/getChatMember"
        data = {"chat_id": chat_id, "user_id": "me"}
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            member_info = response.json()
            if member_info["ok"]:
                member = member_info["result"]
                status = member["status"]
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {status}")
                
                if status == "administrator":
                    print("   üéØ –ë–æ—Ç - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
                    permissions = member.get("can_post_messages", False)
                    if permissions:
                        print("   ‚úÖ –ú–æ–∂–µ—Ç –ø–æ—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
                    else:
                        print("   ‚ùå –ù–ï –º–æ–∂–µ—Ç –ø–æ—Å—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
                elif status == "member":
                    print("   üë§ –ë–æ—Ç - —É—á–∞—Å—Ç–Ω–∏–∫")
                elif status == "left":
                    print("   üö™ –ë–æ—Ç –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç")
                elif status == "kicked":
                    print("   üö´ –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
                else:
                    print(f"   ‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {status}")
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {member_info}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_simple_message(token, chat_id):
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print(f"\nüß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    try:
        url = f"https://api.telegram.org/bot{token}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Twitch AutoPoster"
        }
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            print("‚úÖ –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
            try:
                error_details = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_details}")
            except:
                pass
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Telegram API –¥–ª—è Twitch AutoPoster")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    chat_id = os.getenv('TELEGRAM_CHANNEL_ID')
    
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    if not chat_id:
        print("‚ùå TELEGRAM_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print(f"üîë –¢–æ–∫–µ–Ω: {token[:20]}...")
    print(f"üí¨ Chat ID: {chat_id}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
    bot_ok = check_bot_info(token)
    if not bot_ok:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–æ—Ç–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç
    chat_ok = check_chat_info(token, chat_id)
    if not chat_ok:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —á–∞—Ç–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ chat_id.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    permissions_ok = check_bot_permissions(token, chat_id)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
    message_ok = test_simple_message(token, chat_id)
    
    print("\n" + "=" * 60)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:")
    print(f"   –ë–æ—Ç: {'‚úÖ' if bot_ok else '‚ùå'}")
    print(f"   –ß–∞—Ç: {'‚úÖ' if chat_ok else '‚ùå'}")
    print(f"   –ü—Ä–∞–≤–∞: {'‚úÖ' if permissions_ok else '‚ùå'}")
    print(f"   –û—Ç–ø—Ä–∞–≤–∫–∞: {'‚úÖ' if message_ok else '‚ùå'}")
    
    if bot_ok and chat_ok and permissions_ok and message_ok:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! Telegram –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. –°–º–æ—Ç—Ä–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –≤—ã—à–µ.")
        
        if not permissions_ok:
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("   1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É")
            print("   2. –°–¥–µ–ª–∞–π—Ç–µ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
            print("   3. –î–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ—Å—Ç–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏–π")

if __name__ == "__main__":
    main()
