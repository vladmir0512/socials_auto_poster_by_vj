#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å chat_id –≤ Telegram
"""

import os
import requests
from dotenv import load_dotenv

def get_updates(token):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞"""
    print("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞...")
    
    try:
        url = f"https://api.telegram.org/bot{token}/getUpdates"
        response = requests.get(url)
        
        if response.status_code == 200:
            updates = response.json()
            if updates["ok"] and updates["result"]:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(updates['result'])} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
                return updates["result"]
            else:
                print("‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return []
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {response.status_code}")
            return []
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return []

def find_chat_ids(updates):
    """–ü–æ–∏—Å–∫ chat_id –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö"""
    chat_ids = set()
    
    for update in updates:
        if "message" in update:
            chat = update["message"]["chat"]
            chat_ids.add((chat["id"], chat["type"], chat.get("title", chat.get("first_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"))))
        elif "channel_post" in update:
            chat = update["channel_post"]["chat"]
            chat_ids.add((chat["id"], chat["type"], chat.get("title", "–ö–∞–Ω–∞–ª")))
        elif "my_chat_member" in update:
            chat = update["my_chat_member"]["chat"]
            chat_ids.add((chat["id"], chat["type"], chat.get("title", chat.get("first_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"))))
    
    return chat_ids

def test_chat_id(token, chat_id):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ chat_id"""
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ chat_id: {chat_id}")
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        url = f"https://api.telegram.org/bot{token}/getChat"
        data = {"chat_id": chat_id}
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            chat_info = response.json()
            if chat_info["ok"]:
                chat = chat_info["result"]
                print(f"‚úÖ –ß–∞—Ç –Ω–∞–π–¥–µ–Ω: {chat.get('title', chat.get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'))}")
                print(f"   –¢–∏–ø: {chat['type']}")
                print(f"   ID: {chat['id']}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ API: {chat_info}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            try:
                error_details = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_details}")
            except:
                pass
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def send_test_message(token, chat_id):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ {chat_id}...")
    
    try:
        url = f"https://api.telegram.org/bot{token}/sendMessage"
        data = {
            "chat_id": chat_id,
            "text": "üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Twitch AutoPoster"
        }
        
        response = requests.post(url, data=data)
        
        if response.status_code == 200:
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
            try:
                error_details = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error_details}")
            except:
                pass
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å chat_id –≤ Telegram")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    current_chat_id = os.getenv('TELEGRAM_CHANNEL_ID')
    
    if not token:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print(f"üîë –¢–æ–∫–µ–Ω: {token[:20]}...")
    print(f"üí¨ –¢–µ–∫—É—â–∏–π chat_id: {current_chat_id}")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    updates = get_updates(token)
    
    if not updates:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è chat_id:")
        print("   1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É")
        print("   2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç")
        print("   3. –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        return
    
    # –ò—â–µ–º chat_id –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
    chat_ids = find_chat_ids(updates)
    
    if not chat_ids:
        print("‚ùå Chat ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö")
        return
    
    print(f"\nüìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —á–∞—Ç—ã:")
    for chat_id, chat_type, chat_name in chat_ids:
        print(f"   {chat_id} ({chat_type}): {chat_name}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π chat_id
    if current_chat_id:
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ chat_id: {current_chat_id}")
        current_works = test_chat_id(token, current_chat_id)
        
        if current_works:
            print("‚úÖ –¢–µ–∫—É—â–∏–π chat_id —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            send_test_message(token, current_chat_id)
        else:
            print("‚ùå –¢–µ–∫—É—â–∏–π chat_id –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ chat_id
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö chat_id:")
    working_chats = []
    
    for chat_id, chat_type, chat_name in chat_ids:
        if test_chat_id(token, chat_id):
            if send_test_message(token, chat_id):
                working_chats.append((chat_id, chat_type, chat_name))
    
    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\n" + "=" * 60)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    
    if working_chats:
        print("‚úÖ –†–∞–±–æ—Ç–∞—é—â–∏–µ —á–∞—Ç—ã:")
        for chat_id, chat_type, chat_name in working_chats:
            print(f"   {chat_id} ({chat_type}): {chat_name}")
        
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π chat_id: {working_chats[0][0]}")
        print("   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ .env —Ñ–∞–π–ª:")
        print(f"   TELEGRAM_CHANNEL_ID={working_chats[0][0]}")
    else:
        print("‚ùå –†–∞–±–æ—Ç–∞—é—â–∏—Ö —á–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   1. –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç?")
        print("   2. –£ –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π?")
        print("   3. –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π?")

if __name__ == "__main__":
    main()
