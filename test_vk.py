#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import requests
from dotenv import load_dotenv

load_dotenv()

def test_vk_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VK API"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VK API...")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    VK_GROUP_ID = os.getenv('VK_GROUP_ID')
    VK_ACCESS_TOKEN = os.getenv('VK_ACCESS_TOKEN')
    VK_API_VERSION = '5.131'
    
    print(f"üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   –ì—Ä—É–ø–ø–∞ ID: {VK_GROUP_ID}")
    print(f"   –¢–æ–∫–µ–Ω: {VK_ACCESS_TOKEN[:20]}..." if VK_ACCESS_TOKEN else "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print(f"   API –≤–µ—Ä—Å–∏—è: {VK_API_VERSION}")
    print()
    
    if not VK_GROUP_ID or not VK_ACCESS_TOKEN:
        print("‚ùå VK –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("   –î–æ–±–∞–≤—å—Ç–µ VK_GROUP_ID –∏ VK_ACCESS_TOKEN –≤ .env —Ñ–∞–π–ª")
        return False
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
    print("üîë –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...")
    try:
        url = "https://api.vk.com/method/users.get"
        data = {
            "access_token": VK_ACCESS_TOKEN,
            "v": VK_API_VERSION
        }
        
        response = requests.post(url, data=data)
        if response.status_code == 200:
            result = response.json()
            if "response" in result:
                user = result["response"][0]
                print(f"‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['first_name']} {user['last_name']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞: {result}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ
    print("\nüè¢ –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ...")
    try:
        url = "https://api.vk.com/method/groups.getById"
        data = {
            "group_id": VK_GROUP_ID,
            "access_token": VK_ACCESS_TOKEN,
            "v": VK_API_VERSION
        }
        
        response = requests.post(url, data=data)
        if response.status_code == 200:
            result = response.json()
            if "response" in result:
                group = result["response"][0]
                print(f"‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞–π–¥–µ–Ω–∞: {group['name']}")
                print(f"   –¢–∏–ø: {'–ü—É–±–ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞' if group.get('type') == 'page' else '–ì—Ä—É–ø–ø–∞'}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä—É–ø–ø–µ: {result}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä—É–ø–ø—ã: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
    print("\nüìù –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç...")
    try:
        url = "https://api.vk.com/method/wall.post"
        data = {
            "owner_id": f"-{VK_GROUP_ID}",
            "message": "üß™ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç Twitch AutoPoster\n\n–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API.",
            "access_token": VK_ACCESS_TOKEN,
            "v": VK_API_VERSION
        }
        
        response = requests.post(url, data=data)
        if response.status_code == 200:
            result = response.json()
            if "response" in result:
                post_id = result["response"]["post_id"]
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω! ID: {post_id}")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
                print("üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç...")
                delete_url = "https://api.vk.com/method/wall.delete"
                delete_data = {
                    "owner_id": f"-{VK_GROUP_ID}",
                    "post_id": post_id,
                    "access_token": VK_ACCESS_TOKEN,
                    "v": VK_API_VERSION
                }
                
                delete_response = requests.post(delete_url, data=delete_data)
                if delete_response.status_code == 200:
                    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —É–¥–∞–ª–µ–Ω")
                else:
                    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç")
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å—Ç–∏–Ω–≥–∞: {result}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞: {e}")
        return False
    
    print("\n" + "=" * 50)
    print("üéâ VK API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    return True

if __name__ == "__main__":
    test_vk_api()
